namespace AIDevOpsCompany.Core.Models.QualityReports
{
    /// <summary>
    /// Represents a security vulnerability identified during security testing.
    /// </summary>
    public class SecurityVulnerability
    {
        /// <summary>
        /// Unique identifier for the vulnerability.
        /// </summary>
        public string VulnerabilityId { get; set; } = string.Empty;
        
        /// <summary>
        /// Short title describing the vulnerability.
        /// </summary>
        public string Title { get; set; } = string.Empty;
        
        /// <summary>
        /// Detailed description of the vulnerability.
        /// </summary>
        public string Description { get; set; } = string.Empty;
        
        /// <summary>
        /// Severity level of the vulnerability.
        /// </summary>
        public VulnerabilitySeverity Severity { get; set; }
        
        /// <summary>
        /// Type classification of the vulnerability.
        /// </summary>
        public VulnerabilityType Type { get; set; }
        
        /// <summary>
        /// Common Weakness Enumeration identifier (industry standard for vulnerability types).
        /// </summary>
        public string CweId { get; set; } = string.Empty;
        
        /// <summary>
        /// Common Vulnerability Scoring System score (industry standard for vulnerability severity).
        /// </summary>
        public string CvssScore { get; set; } = string.Empty;
        
        /// <summary>
        /// Location in the codebase or system where the vulnerability was found.
        /// </summary>
        public string Location { get; set; } = string.Empty;
        
        /// <summary>
        /// Recommended actions to mitigate or fix the vulnerability.
        /// </summary>
        public string Recommendation { get; set; } = string.Empty;
        
        /// <summary>
        /// Current status of the vulnerability in its resolution lifecycle.
        /// </summary>
        public VulnerabilityStatus Status { get; set; } = VulnerabilityStatus.Open;
        
        /// <summary>
        /// Date and time when the vulnerability was discovered.
        /// </summary>
        public DateTime DiscoveredAt { get; set; } = DateTime.UtcNow;
        
        /// <summary>
        /// Date and time when the vulnerability was fixed, if applicable.
        /// </summary>
        public DateTime? FixedAt { get; set; }
    }
}
